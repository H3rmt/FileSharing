main {
	margin: auto;
	padding: 1rem;
}

.content {
	display: flex;
	flex-direction: column;
	gap: 3rem;
}

.sub-content {
	display: flex;
	flex-direction: column;
	gap: 1rem;
}

.title {
	font-size: 3rem;
	font-weight: 800;
	margin: 0;
	margin-bottom: 1rem;
}

.instructions {
	display: flex;
	gap: 1rem;
	justify-content: space-between;

	border: 2px solid rgba(var(--accent), 55%);
	padding: 1rem;
	border-radius: 0.4rem;
}

.instructions p {
	margin: 0rem;
	line-height: 1.6;
}

.instructions button {
	padding: 0.3rem;
	border: 2px solid rgba(var(--accent), 55%);
	border-radius: 0.4rem;
	background: transparent;
}

.text-gradient {
	background-image: var(--accent-gradient);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
}

.text-color {
	color: rgb(var(--accent-light));
	font-weight: bolder;
}

.files {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(40ch, 1fr));
	gap: 1rem;
	overflow: auto;
	padding: 0;
	margin: 0;
}

.file {
	background-size: 200%;
	border-radius: 0.6rem;

	border: 2px dashed rgba(var(--accent), 55%);
	background-image: none;
	background-color: transparent;
}

.file>h2 {
	filter: drop-shadow(.05em .05em black);
	margin-block: 0.2rem;
	font-size: 1.8rem;
}

.existingFile {
	display: flex;
	position: relative;
	flex-direction: column;
	padding: 0.8rem;
	position: relative;
	mix-blend-mode: difference;
	color: white;

	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;

	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
}

.existingFile>p {
	filter: drop-shadow(.05em .05em black);
}

.existingFile:is(:hover, :focus-within) {
	color: rgb(var(--accent));
}

.existingFile>.close {
	position: absolute;
	z-index: 200;
	right: 0.4rem;
	top: 0.4rem;
	
	filter: drop-shadow(.05em .05em black);
	font-weight: bold;
	border-radius: 0.6rem;

	display: flex;
	align-items: start;
	gap: 0.7rem;
}

.existingFile>.close>.close-btn {
	padding: 0.3rem;
	cursor: pointer;

	border-radius: 0.6rem;
	background-color: rgba(var(--background), 70%);
	border: 2px solid rgba(var(--accent), 70%);
}

.existingFile>.count {
	position: absolute;
	right: 0.4rem;
	bottom: 0.4rem;

	padding: 0.3rem;

	border-radius: 0.6rem;
	background-color: rgba(var(--background), 70%);
	border: 2px solid rgba(var(--accent), 70%);
}

.existingFile::before {
	content: "";
	position: absolute;
	left: 0;
	top: 0;
	z-index: -1;

	display: block;
	background-image: var(--background-img);
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
	width: 100%;
	height: 100%;

	-webkit-filter: blur(3px);
	filter: blur(3px);
}

.existingFile>.data {
	white-space: initial;
	max-height: 30dvh;
	overflow: auto;
}

.newFile {
	display: flex;
	flex-direction: row;
	padding: 0.6rem;

	justify-content: center;
	align-items: center;
	gap: 2rem;
}


.newSnippet {
	display: grid;
	grid-template:
		'add name submit'
		'snippet snippet snippet' / auto auto;
	padding: 0.6rem;

	justify-content: center;
	align-items: center;
	gap: 2rem;
}

.newSnippet .add {
	grid-area: add;
}

.newSnippet input[type=text] {
	grid-area: name;
}

.newSnippet input[type=submit] {
	grid-area: submit;
}


.newSnippet>.grow-wrap {
	grid-area: snippet;

	max-height: 40dvh;
	overflow: auto;
	display: grid;
}


.newSnippet>.grow-wrap::after {
	content: attr(data-replicated-value) " ";
	white-space: pre-wrap;
	visibility: hidden;
	grid-area: 1 / 1 / 2 / 2;
}

.newSnippet>.grow-wrap>textarea {
	resize: none;
	overflow: hidden;
	font: inherit;
	grid-area: 1 / 1 / 2 / 2;
}

@media only screen and (max-width: 700px) {
	.newFile .add {
		display: none;
	}

	.newSnippet .add {
		display: none;
	}
}

@media only screen and (max-width: 500px) {
	.newFile {
		flex-direction: column;
	}
}

.dragover {
	background-color: rgba(var(--accent), 30%);
	border: 2px solid rgba(var(--accent), 55%);
}